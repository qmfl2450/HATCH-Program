{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detil/DetailPresenter.js","Routes/Detil/index.js","Routes/Detil/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","api","axios","create","baseURL","params","api_key","language","MovieAPI","get","id","append_to_response","term","query","encodeURIComponent","TVAPI","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","require","default","length","substring","MoviePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","data","results","this","setState","HomePresenter","React","Component","TVPresenter","toprated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResult","tvResult","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3142cf90.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({location: {pathname}}) => (\r\n    <Header>\r\n      <List>\r\n        <Item current={pathname === '/'}>\r\n          <SLink to=\"/\">Movies</SLink>\r\n        </Item>\r\n        <Item current={pathname === '/tv'}>\r\n          <SLink to=\"/tv\">TV</SLink>\r\n        </Item>\r\n        <Item current={pathname === '/search'}>\r\n          <SLink to=\"/search\">Search</SLink>\r\n        </Item>\r\n      </List>\r\n    </Header>\r\n  ));","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/',\r\n    params: {\r\n        api_key: '75428c437df083e9695dd54db176a3e6',\r\n        language: 'en-US'\r\n    }\r\n});\r\n\r\nexport const MovieAPI = {\r\n    nowPlaying: () => api.get('movie/now_playing'),\r\n    upcoming: () => api.get('movie/upcoming'),\r\n    popular: () => api.get('movie/popular'),\r\n    movieDetail: id => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: 'videos'\r\n        }\r\n    }),\r\n    search: term => api.get('search/movie', {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n}\r\n\r\nexport const TVAPI = {\r\n    toprated: () => api.get('tv/top_rated'),\r\n    popular: () => api.get('tv/popular'),\r\n    airingToday: () => api.get('tv/airing_today'),\r\n    showDetail: id => api.get(`tv/${id}`, {\r\n        params: {\r\n            append_to_response: 'videos'\r\n        }\r\n    }),\r\n    search: term => api.get('search/tv', {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n}","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child) {\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 125px);\r\n    grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({title, children}) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: propTypes.string.isRequired,\r\n    children: propTypes.oneOfType([\r\n        propTypes.arrayOf(propTypes.node),\r\n        propTypes.node\r\n      ])\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 25px;\r\n    margin-top: 20px;\r\n`;\r\n\r\nexport default () =>\r\n    (<Container>\r\n        <span role='img' aria-label='Loading'>⏳</span>\r\n    </Container>);","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: ${props => props.color};\r\n    font-size: 18px;\r\n`;\r\n\r\nconst Message = ({text, color}) => (\r\n    <Container>\r\n        <Text color={color}>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text: propTypes.string.isRequired,\r\n    color: propTypes.string.isRequired\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.png\").default\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: propTypes.number.isRequired,\r\n  imageUrl: propTypes.string,\r\n  title: propTypes.string.isRequired,\r\n  rating: propTypes.number,\r\n  year: propTypes.string,\r\n  isMovie: propTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst MoviePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Up Coming\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\nMoviePresenter.propTypes = {\r\n  nowPlaying: propTypes.array,\r\n  popular: propTypes.array,\r\n  upcoming: propTypes.array,\r\n  loading: propTypes.isRequired,\r\n  error: propTypes.string,\r\n};\r\n\r\nexport default MoviePresenter;\r\n","import HomeContainer from './HomeContainer';\r\n\r\nexport default HomeContainer;","import { MovieAPI } from 'api';\r\nimport React from 'react';\r\nimport HomePresenter from './HomePresenter';\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {data: {results: nowPlaying}} = await MovieAPI.nowPlaying()\r\n            const {data: {results: upcoming}} = await MovieAPI.upcoming()\r\n            const {data: {results: popular}} = await MovieAPI.popular()\r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find movies information.\"\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {nowPlaying, upcoming, popular, error, loading} = this.state;\r\n        return (\r\n            <HomePresenter\r\n                nowPlaying={nowPlaying}\r\n                upcoming={upcoming}\r\n                popular={popular}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ toprated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {toprated && toprated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {toprated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today Shows\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  toprated: propTypes.array,\r\n  popular: propTypes.array,\r\n  airingToday: propTypes.array,\r\n  loading: propTypes.isRequired,\r\n  error: propTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from './TVContainer'\r\n\r\nexport default TVContainer;","import { TVAPI } from 'api';\r\nimport React from 'react';\r\nimport TVPresenter from './TVPresenter';\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        toprated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        error: null,\r\n        loading: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {data: {results: toprated}} = await TVAPI.toprated();\r\n            const {data: {results: popular}} = await TVAPI.popular();\r\n            const {data: {results: airingToday}} = await TVAPI.airingToday();\r\n            this.setState({\r\n                toprated,\r\n                popular,\r\n                airingToday\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find TV information.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {toprated, popular, airingToday, error, loading} = this.state;\r\n        return (\r\n            <TVPresenter \r\n                toprated={toprated}\r\n                popular={popular}\r\n                airingToday={airingToday}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResult,\r\n  tvResult,\r\n  searchTerm,\r\n  handleSubmit,\r\n  updateTerm,\r\n  loading,\r\n  error,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResult && movieResult.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResult.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResult && tvResult.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResult.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResult && movieResult && tvResult.length < 1 && movieResult < 1 && (\r\n          <Message text=\"Nothing Found\" color=\"#95a5a6\" />\r\n        )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResult: propTypes.array,\r\n  tvResult: propTypes.array,\r\n  searchTerm: propTypes.string,\r\n  handleSubmit: propTypes.func.isRequired,\r\n  updateTerm: propTypes.func.isRequired,\r\n  loading: propTypes.bool.isRequired,\r\n  error: propTypes.string,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from './SearchContainer';\r\n\r\nexport default SearchContainer;","import { MovieAPI, TVAPI } from 'api';\r\nimport React from 'react';\r\nimport SearchPresenter from './SearchPresenter';\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        movieResult: null,\r\n        tvResult: null,\r\n        searchTerm: '',\r\n        error: null,\r\n        loading: false\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const {searchTerm} = this.state;\r\n        this.setState({loading: true})\r\n        if (searchTerm !== '') {\r\n            this.searchByTerm();\r\n        }\r\n    };\r\n\r\n    updateTerm = event => {\r\n        const {\r\n            target: {value}\r\n        } = event;\r\n        this.setState({\r\n            searchTerm: value\r\n        })\r\n    }\r\n\r\n    searchByTerm = async () => {\r\n        const {searchTerm} = this.state;\r\n        this.setState({loading: true});\r\n        try {\r\n            const {data: {results: movieResult}} = await MovieAPI.search(searchTerm);\r\n            const {data: {results: tvResult}} = await TVAPI.search(searchTerm);\r\n            this.setState({\r\n                movieResult,\r\n                tvResult\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find results.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    };\r\n    \r\n    render() {\r\n        const {movieResult, tvResult, searchTerm, error, loading} = this.state;\r\n        return (\r\n            <SearchPresenter \r\n                movieResult={movieResult}\r\n                tvResult={tvResult}\r\n                searchTerm={searchTerm}\r\n                handleSubmit={this.handleSubmit}\r\n                updateTerm={this.updateTerm}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Message from \"Components/Message\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : error ? (\r\n    <Message />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Nomflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/w300${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/w300${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\").default\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time} min\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: propTypes.object,\r\n  loading: propTypes.isRequired,\r\n  error: propTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from './DetailContainer';\r\n\r\nexport default DetailContainer;","import { MovieAPI, TVAPI } from 'api';\r\nimport React from 'react';\r\nimport DetailPresenter from './DetailPresenter';\r\n\r\nexport default class extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        const {location: {pathname}} = props;\r\n        this.state= {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes('/movie/')\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const {match: {params: {id}}, history: {push}} = this.props;\r\n        const {isMovie} = this.state;\r\n        const parsedId = parseInt(id);\r\n        if (isNaN(parsedId)) {\r\n            return push('/');\r\n        }\r\n        let result = null;\r\n        try {\r\n            if (isMovie) {\r\n                ({data: result} = await MovieAPI.movieDetail(parsedId));\r\n            } else {\r\n                ({data: result} = await TVAPI.showDetail(parsedId));\r\n            }\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find anything.\"\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading: false,\r\n                result\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {result, error, loading} = this.state\r\n        return (\r\n            <DetailPresenter\r\n                result={result}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Home from '../Routes/Home/';\r\nimport TV from '../Routes/TV/';\r\nimport Search from '../Routes/Search/';\r\nimport Detail from '../Routes/Detil/';\r\n\r\nexport default () => (\r\n    <Router>\r\n        <Header />\r\n        <Switch>\r\n            <Route path='/' exact component={Home} />\r\n            <Route path='/tv' component={TV} />\r\n            <Route path='/search' component={Search} />\r\n            <Route path='/movie/:id' component={Detail} />\r\n            <Route path='/show/:id' component={Detail} />\r\n            <Redirect from='*' to='/' />\r\n        </Switch>\r\n    </Router>\r\n)","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    *{\r\n        box-sizing: border-box;\r\n    }\r\n    body{\r\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 12px;\r\n        background-color: rgba(20, 20, 20, 1);\r\n        color: white;\r\n        padding-top: 50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, {Component} from 'react';\nimport Router from './Router';\nimport GlobalStyles from './GlobalStyles';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport {MovieAPI, TVAPI} from './api';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}